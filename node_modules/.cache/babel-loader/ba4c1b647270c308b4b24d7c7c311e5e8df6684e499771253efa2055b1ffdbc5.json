{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\libin\\\\Desktop\\\\Bio\\\\biowriter\\\\biowriter\\\\src\\\\components\\\\journals\\\\ImportExcel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { utils, read } from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportExcel = () => {\n  _s();\n  const [excelData, setExcelData] = useState([]);\n  const file_type = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel'];\n  const handleChange = e => {\n    const selected_file = e.target.files[0];\n    if (selected_file) {\n      if (selected_file && file_type.includes(selected_file.type)) {\n        let reader = new FileReader();\n        reader.onload = e => {\n          const workbook = read(e.target.result);\n          const sheet = workbook.SheetNames;\n          if (sheet.length) {\n            const data = utils.sheet_to_json(workbook.Sheets[sheet[0]]);\n            setExcelData(data);\n          }\n        };\n        reader.readAsArrayBuffer(selected_file);\n      } else {}\n      console.log('please upload excel file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"justify-center item-center flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        children: [\"onChange=\", handleChange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sl. No. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Journal name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"2022 JIF \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: excelData.length ? excelData.map(info => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: info.SlNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: info.JournalName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: info.JIF2022\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No available Data is present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportExcel, \"C5sL3zv7lskJUDsNy+ejqEh8Xrc=\");\n_c = ImportExcel;\nexport default ImportExcel;\nvar _c;\n$RefreshReg$(_c, \"ImportExcel\");","map":{"version":3,"names":["React","useState","utils","read","jsxDEV","_jsxDEV","ImportExcel","_s","excelData","setExcelData","file_type","handleChange","e","selected_file","target","files","includes","type","reader","FileReader","onload","workbook","result","sheet","SheetNames","length","data","sheet_to_json","Sheets","readAsArrayBuffer","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","info","SlNo","JournalName","JIF2022","_c","$RefreshReg$"],"sources":["C:/Users/libin/Desktop/Bio/biowriter/biowriter/src/components/journals/ImportExcel.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { utils,read } from \"xlsx\"\r\n\r\nconst ImportExcel = () => {\r\n  const [excelData, setExcelData] = useState([])\r\n  const file_type=['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/vnd.ms-excel']\r\n  const handleChange = (e) => {\r\n    const selected_file = e.target.files[0];\r\n    if (selected_file) {\r\n      if (selected_file && file_type.includes(selected_file.type)) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const workbook = read(e.target.result);\r\n          const sheet = workbook.SheetNames;\r\n          if (sheet.length) {\r\n            const data = utils.sheet_to_json(workbook.Sheets[sheet[0]]);\r\n            setExcelData(data);\r\n          }\r\n        }\r\n        reader.readAsArrayBuffer(selected_file)\r\n      }else {\r\n        \r\n        }\r\n      console.log('please upload excel file')\r\n    }\r\n  }\r\n  return (\r\n    <div className='justify-center item-center flex flex-col'>\r\n      <div>\r\n        <input type='file'>\r\n          onChange={handleChange}\r\n        </input>\r\n      </div>\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Sl. No. </th>\r\n              <th>Journal name </th>\r\n              <th>2022 JIF </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              excelData.length\r\n                ? \r\n                excelData.map((info) => (\r\n                  <tr>\r\n                    <td>{info.SlNo}</td>\r\n                    <td>{info.JournalName}</td>\r\n                    <td>{info.JIF2022}</td>\r\n                  </tr>\r\n                ))\r\n                : (\r\n                  <h2>No available Data is present</h2>\r\n                )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n  </div>)\r\n}\r\n\r\nexport default ImportExcel"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}